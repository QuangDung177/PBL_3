@model monamedia.Areas.Admin.Data.EditStaffViewModel

@{
    ViewBag.Title = "EditStaff";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayoutPage1.cshtml";
}
<main class="main">
    <div class="main_title">
        <p class="main_title-label "><b>Danh sách nhân viên/Thay đổi thông tin nhân viên</b></p>
        <div id="clock"></div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="title">
                <h1 style="font-size:medium "><b>Thay đổi thông tin nhân viên</b></h1>
                <form action="/Admin/AHome/EditStaff" method="post">
                    <div class="row" style="padding-bottom: 20px;">
                        <input type="hidden" name="staffID" value="@Model.Staff.staffID" />
                        <input type="hidden" name="accountID" value="@Model.Account.accountID" />
                        <div class="form-group col-md-4">
                            <label class="control-label">Họ và tên</label>
                            <input class="form-control" type="text" id="fullName" name="fullName" placeholder="Họ và tên" required value="@Model.Staff.fullName">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Tên đăng nhập</label>
                            <input class="form-control" type="text" id="userName" name="userName" placeholder="Tên đăng nhập" required value="@Model.Account.userName">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Mật khẩu</label>
                            <input class="form-control" type="text" id="password" name="password" placeholder="Mật khẩu" required value="@Model.Account.password">
                        </div>

                        <div class="form-group col-md-4">
                            <label class="control-label">Ngày sinh</label>
                            <input class="form-control" type="date" id="birthDate" name="birthDate" placeholder="Ngày sinh" value="@Model.Staff.birthDate.Value.ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                    <div class="row" style="padding-bottom: 20px;">
                        <div class="form-group col-md-4">
                            <label class="control-label">Giới tính</label><br>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="gender" id="Nam" value="true" @(Model.Staff.gender == true ? "checked" : "")>
                                <label class="form-check-label" for="Nam">Nam</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="gender" id="Nữ" value="false" @(Model.Staff.gender == false ? "checked" : "")>
                                <label class="form-check-label" for="Nữ">Nữ</label>
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Địa chỉ</label>
                            <input class="form-control" type="text" id="address" name="address" placeholder="Địa chỉ" required value="@Model.Staff.address">
                        </div>
                        <div class="form-group  col-md-4">
                            <label class="control-label">Số điện thoại</label>
                            <input class="form-control" type="text" id="phoneNumber" name="phoneNumber" placeholder="Số điện thoại" required value="@Model.Staff.phoneNumber">
                        </div>
                    </div>
                    <div class="row" style="padding-bottom: 20px;">
                        <div class="form-group  col-md-4">
                            <label class="control-label">Lương</label>
                            <input class="form-control" type="text" id="salary" name="salary" placeholder="Lương" required value="@Model.Staff.salary">
                        </div>

                        <div class="form-group col-md-4">
                            <label class="control-label">Email</label>
                            <input class="form-control" type="text" id="email" name="email" placeholder="Email" required value="@Model.Account.email">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="control-label">Vai trò</label>
                            <input class="form-control" type="text" id="role" name="role" placeholder="Vai trò" value="@Model.Account.role" readonly>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-success">Sửa</button>
                    <a href="/Admin/AHome" class="btn btn-danger">Hủy</a>
                </form>
            </div>
        </div>


    </div>
</main>
<script src="sweetalert2.all.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts\jquery-3.7.1.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>


    document.addEventListener('DOMContentLoaded', formatSalaryInput);
    document.getElementById('salary').addEventListener('input', formatSalaryInput);

    function formatSalaryInput() {
        let salaryInput = document.getElementById('salary');
        if (salaryInput.value) {
            let formattedSalary = parseFloat(salaryInput.value.replace(/,/g, '')).toLocaleString('en-US');
            salaryInput.value = formattedSalary;
        }
    }
    document.addEventListener('DOMContentLoaded', function () {
        // Lắng nghe sự kiện submit của form
        document.querySelector('form').addEventListener('submit', function (e) {
            // Kiểm tra xem các trường đã được nhập đầy đủ hay chưa
            let isValid = true;
            document.querySelectorAll('input[required]').forEach(function (input) {
                if (!input.value.trim()) { // Kiểm tra xem giá trị của trường có tồn tại hay không
                    isValid = false;
                    input.classList.add('is-invalid'); // Thêm class is-invalid để highlight trường cần nhập
                } else {
                    input.classList.remove('is-invalid');
                }
            });

            // Nếu có trường nào chưa được nhập đầy đủ, ngăn chặn gửi form đi và hiển thị thông báo
            if (!isValid) {
                e.preventDefault();
                swal("", "Vui lòng nhập đầy đủ thông tin.", "warning");
            }
            else {
                // Ngăn chặn hành động mặc định của form (không gửi đi)
                e.preventDefault();

                // Lấy giá trị từ trường lương
                let salaryInput = document.getElementById('salary').value;

                // Chuyển đổi giá trị thành số nguyên và gán lại vào trường lương
                document.getElementById('salary').value = parseInt(salaryInput.replace(/,/g, ''), 10);



                // Gửi form đi
                Swal.fire({
                  
                    position: "center",
                    icon: "success",
                    title: "Thông tin đã được cập nhật.",
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    // Gửi form đi
                    this.submit();
                });
            }
        });
    });


</script>

